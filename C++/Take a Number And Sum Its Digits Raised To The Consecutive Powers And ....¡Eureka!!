/*
The number  89 89 is the first integer with more than one digit that fulfills the property partially introduced in the title of this kata. 
What's the use of saying "Eureka"? Because this sum gives the same number:

89
= 8^(1) + 9^(2) = 89

The next number in having this property is 
135
= 1^(1) + 3^(2) + 5^(3) = 135
 
Task
We need a function to collect these numbers, that may receive two integers 
[a,b] (inclusive) and outputs a list of the sorted numbers in the range that fulfills the property described above.

Examples
Let's see some cases (input -> output):

1, 10  --> [1, 2, 3, 4, 5, 6, 7, 8, 9]
1, 100 --> [1, 2, 3, 4, 5, 6, 7, 8, 9, 89]

If there are no numbers of this kind in the range [a,b] the function should output an empty list.

90, 100 --> []
Enjoy it!!
*/

#include <vector>
#include <string>
#include <cmath>
std::vector<unsigned int> sumDigPow(unsigned int a, unsigned int b) {
  std::vector<unsigned int> numsThatWork;
  for(int i = a; i <= b; i++){
    int result = 0;
    std::string temp = std::to_string(i); //a is a string now
    for(int j = 0; j < temp.length(); j++){
      char currentNum = temp[j];        //currentNum == each digit as a char
      int num = int(currentNum - '0'); //num == char back into an int
      int numPowered = pow(num,j+1);   
      result += numPowered;          
    }
    if(result == i){
      numsThatWork.push_back(i);
    }
  }
  return {numsThatWork};
}
